# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

common_sources = [
  "breakpoint.cc",
  "breakpoint.h",
  "dso-list.cc",
  "dso-list.h",
  "elf-util.cc",
  "elf-util.h",
  "exception_port.cc",
  "exception_port.h",
  "registers.cc",
  "registers.h",
  "io_loop.cc",
  "io_loop.h",
  "memory.h",
  "memory-process.cc",
  "memory-process.h",
  "process.cc",
  "process.h",
  "server.cc",
  "server.h",
  "thread.cc",
  "thread.h",
  "util.cc",
  "util.h",
]

if (current_cpu == "x64") {
  arch_sources = [
    "arch-amd64.cc",
    "breakpoint_amd64.cc",
    "registers_amd64.cc",
  ]
} else if (current_cpu == "arm64") {
  arch_sources = [
    "arch-arm64.cc",
    "breakpoint_arm64.cc",
    "registers_arm64.cc",
  ]
} else {
  arch_sources = [
    "arch-default.cc",
    "breakpoint_default.cc",
    "registers_default.cc",
  ]
}

executable("gdbserver") {
  output_name = "debugserver"

  sources = common_sources
  sources += arch_sources

  sources += [
    "command_handler.cc",
    "command_handler.h",
    "io-loop-rsp.cc",
    "io-loop-rsp.h",
    "main-rsp.cc",
    "server-rsp.cc",
    "server-rsp.h",
    "stop_reply_packet.cc",
    "stop_reply_packet.h",
    "thread-action-list.cc",
    "thread-action-list.h",
  ]

  deps = [
    "//lib/ftl",
    "//lib/mtl",
    "//magenta/system/ulib/mx",
  ]

  libs = [
    "launchpad",
    "magenta",
  ]
}

executable("mydb") {
  output_name = "mydb"

  sources = common_sources
  sources += arch_sources

  sources += [
    "backtrace.cc",
    "backtrace.h",
    "debug-info-cache.cc",
    "debug-info-cache.h",
    "io-loop-mydb.cc",
    "io-loop-mydb.h",
    "mydb-command-handler.cc",
    "mydb-command-handler.h",
    "main-mydb.cc",
    "readline.cc",
    "readline.h",
    "server-mydb.cc",
    "server-mydb.h",
  ]

  deps = [
    "//lib/ftl",
    "//lib/mtl",
  ]

  libs = [
    "backtrace",
    "launchpad",
    "magenta",
    "ngunwind",
  ]
}

group("tests") {
  testonly = true

  deps = [
    ":gdbserver_unittests",
    "test_apps",
  ]
}

executable("gdbserver_unittests") {
  testonly = true

  sources = [
    "stop_reply_packet.cc",
    "stop_reply_packet.h",
    "stop_reply_packet_unittest.cc",
    "test/run_all_unittests.cc",
    "thread-action-list.cc",
    "thread-action-list.h",
    "thread-action-list-unittest.cc",
    "util.cc",
    "util.h",
    "util_unittest.cc",
  ]

  deps = [
    "//lib/ftl",
    "//third_party/gtest",
  ]

  libs = [
    "magenta",
  ]
}
